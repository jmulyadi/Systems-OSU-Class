!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ActionFunction	libll.h	/^typedef void (* ActionFunction)( void *data);$/;"	t
BITMASK	bits.c	19;"	d	file:
BITMASK	colorBit.c	6;"	d	file:
Buckeye	structs.h	/^struct Buckeye $/;"	s
CFLAGS	makefile	/^CFLAGS= -std=c99 -pedantic -Wformat -Wreturn-type $/;"	m
COLORBITMASK	bits.c	20;"	d	file:
COLORBITMASK	colorBit.c	7;"	d	file:
COLORSHIFT	bits.c	21;"	d	file:
COLORSHIFT	colorBit.c	8;"	d	file:
Coin	structs.h	/^struct Coin$/;"	s
ComparisonFunction	libll.h	/^typedef bool (* ComparisonFunction)(void *data1, void *data2);$/;"	t
CriteriaFunction	libll.h	/^typedef bool (* CriteriaFunction)(void *data, void *helper);$/;"	t
DEBUG	debug.h	16;"	d
DELTA_TIME	constants.h	4;"	d
FLAG_LIMIT	physics.c	24;"	d	file:
G	physics.c	25;"	d	file:
GRAPHICS	debug.h	14;"	d
JUMPSHIFT	bits.c	22;"	d	file:
JUMPSHIFT	colorBit.c	9;"	d	file:
Node	node.h	/^	}Node;$/;"	t	typeref:struct:Node
Node	node.h	/^typedef struct Node{$/;"	s
NumericFunction	libll.h	/^typedef double (* NumericFunction)(void *data);$/;"	t
RVAL_BAD_INIT	lab3.c	28;"	d	file:
RVAL_BAD_INPUT	lab3.c	29;"	d	file:
START_POSITION	input.c	29;"	d	file:
STRUCTS_H	structs.h	4;"	d
Sim	structs.h	/^struct Sim$/;"	s
TEXT	debug.h	13;"	d
VERBOSE	debug.h	12;"	d
WAIT	output.c	24;"	d	file:
XVELSHIFT	bits.c	23;"	d	file:
XVELSHIFT	colorBit.c	10;"	d	file:
all	callback.c	/^bool all(void *data, void *helper)$/;"	f
all_done	callback.c	/^void all_done(void *data)$/;"	f
all_left_of_flag	callback.c	/^bool all_left_of_flag(void *data, void *helper)$/;"	f
allocate	mem.c	/^void *allocate(bool wantMascot)$/;"	f
allocate	memory.c	/^void *allocate(bool wantMascot)$/;"	f
basic_motion	physics.c	/^static void basic_motion(struct Buckeye *brutus)$/;"	f	file:
ceiling_message	output.c	/^void ceiling_message(struct Buckeye *brutus)$/;"	f
clear_coins	output.c	/^void clear_coins(struct Sim *world)$/;"	f
clear_mascots	output.c	/^void clear_mascots(struct Sim *world)$/;"	f
close_enough	physics.c	/^bool close_enough(struct Coin *c, struct Buckeye *b)$/;"	f
coinInsert	callback.c	/^bool coinInsert(void *data1, void *data2)$/;"	f
coins	structs.h	/^    void *coins;$/;"	m	struct:Sim
collect_coins	sim.c	/^void collect_coins(struct Sim *world)$/;"	f
color	structs.h	/^    int color;$/;"	m	struct:Buckeye
color	structs.h	/^    int color;$/;"	m	struct:Coin
data	node.h	/^	void *data;$/;"	m	struct:Node
deal_with_coin	input.c	/^void deal_with_coin(unsigned short code, struct Sim *world)$/;"	f
deal_with_input	input.c	/^void deal_with_input(unsigned short code, struct Sim *world)$/;"	f
deal_with_mascot	input.c	/^void deal_with_mascot(unsigned short code,struct Sim *world)$/;"	f
deleteAll	delete.c	/^bool deleteAll(void *data, void *helper)$/;"	f
deleteAll	insert.c	/^bool deleteAll(void *data, void *helper)$/;"	f
deleteUpperCase	delete.c	/^bool deleteUpperCase(void *data, void *helper)$/;"	f
disposal	delete.c	/^void disposal(void *data)$/;"	f
disposal	insert.c	/^void disposal(void *data)$/;"	f
draw_brutus	output.c	/^static void draw_brutus(void * data)$/;"	f	file:
draw_coin	output.c	/^static void draw_coin(void * data)$/;"	f	file:
elapsed	structs.h	/^    double elapsed;$/;"	m	struct:Sim
final_draw	output.c	/^static void final_draw(struct Sim *world)$/;"	f	file:
final_output	output.c	/^void final_output(struct Sim *world)$/;"	f
first_letter	delete.c	/^bool first_letter(void *data1, void *data2)$/;"	f
first_letter	insert.c	/^bool first_letter(void *data1, void *data2)$/;"	f
flag_message	output.c	/^void flag_message(struct Buckeye *brutus)$/;"	f
floor_message	output.c	/^void floor_message(struct Buckeye *brutus)$/;"	f
freeMem	mem.c	/^void freeMem(void *data)$/;"	f
freeMem	memory.c	/^void freeMem(void *data)$/;"	f
free_all	sim.c	/^void free_all(struct Sim *world)$/;"	f
game_on	sim.c	/^bool game_on(struct Sim *world)$/;"	f
get_VX	bits.c	/^unsigned int get_VX(unsigned short code)$/;"	f
get_coin_x	bits.c	/^unsigned int get_coin_x(unsigned short code)$/;"	f
get_coin_x	colorBit.c	/^unsigned int get_coin_x(unsigned short code)$/;"	f
get_coin_y	bits.c	/^unsigned int get_coin_y(unsigned short code)$/;"	f
get_coin_y	colorBit.c	/^unsigned int get_coin_y(unsigned short code)$/;"	f
get_color	bits.c	/^unsigned int get_color(unsigned short code)$/;"	f
get_color	colorBit.c	/^unsigned int get_color(unsigned short code)$/;"	f
get_jump_V	bits.c	/^unsigned int get_jump_V(unsigned short code)$/;"	f
get_score	lab3.c	/^int get_score(struct Buckeye *brutus)$/;"	f
good_input	input.c	/^bool good_input(struct Sim *world)$/;"	f
good_parity	bits.c	/^static bool good_parity(unsigned short code)$/;"	f	file:
good_parity	colorBit.c	/^static bool good_parity(unsigned short code)$/;"	f	file:
init	lab3.c	/^bool init()$/;"	f
isCoin	bits.c	/^bool isCoin(unsigned short code)$/;"	f
isCoin	colorBit.c	/^bool isCoin(unsigned short code)$/;"	f
isMascot	bits.c	/^bool isMascot(unsigned short code)$/;"	f
isMascot	colorBit.c	/^bool isMascot(unsigned short code)$/;"	f
is_left_of_flag	physics.c	/^bool is_left_of_flag(struct Buckeye *brutus)$/;"	f
jump_message	output.c	/^void jump_message(struct Buckeye *brutus)$/;"	f
jump_velocity	structs.h	/^    double jump_velocity;$/;"	m	struct:Buckeye
loot	structs.h	/^    int loot;$/;"	m	struct:Buckeye
loot_message	output.c	/^void loot_message(struct Buckeye *brutus)$/;"	f
main	colorBit.c	/^int main()$/;"	f
main	delete.c	/^int main()$/;"	f
main	insert.c	/^int main()$/;"	f
main	lab3.c	/^int main()$/;"	f
main	mem.c	/^int main()$/;"	f
main	structHelp.c	/^int main()$/;"	f
makeWorld	mem.c	/^void *makeWorld()$/;"	f
make_adjustments	physics.c	/^static void make_adjustments(struct Buckeye *brutus)$/;"	f	file:
mascotInsert	callback.c	/^bool mascotInsert(void *data1, void *data2)$/;"	f
mascots	structs.h	/^    void *mascots;$/;"	m	struct:Sim
master_draw	output.c	/^static void master_draw(struct Sim *world)$/;"	f	file:
master_output	output.c	/^void master_output(struct Sim *world)$/;"	f
master_print	output.c	/^static void master_print(struct Sim *world)$/;"	f	file:
move	callback.c	/^void move(void *data)$/;"	f
move_brutus	physics.c	/^void move_brutus(struct Buckeye *brutus)$/;"	f
my_coin	callback.c	/^bool my_coin(void *data, void *helper)$/;"	f
next	node.h	/^	struct Node *next;$/;"	m	struct:Node	typeref:struct:Node::Node
output_bad_bits	output.c	/^void output_bad_bits(unsigned short code)$/;"	f
output_scanf	output.c	/^void output_scanf(int tokens)$/;"	f
print	delete.c	/^void print(void *data)$/;"	f
print	insert.c	/^void print(void *data)$/;"	f
print_brutus	output.c	/^static void print_brutus(void * data)$/;"	f	file:
print_coin	output.c	/^static void print_coin(void * data)$/;"	f	file:
print_coins	callback.c	/^void print_coins(void *data)$/;"	f
print_mascots	callback.c	/^void print_mascots(void *data)$/;"	f
run_sim	sim.c	/^void run_sim(struct Sim *world)$/;"	f
sim	structs.h	/^    struct Sim *sim;$/;"	m	struct:Buckeye	typeref:struct:Buckeye::Sim
sort_mascots_y	callback.c	/^bool sort_mascots_y(void *data1, void *data2)$/;"	f
sort_points	callback.c	/^bool sort_points(void *data1, void *data2)$/;"	f
sweep_coins	callback.c	/^void sweep_coins(void *data)$/;"	f
teardown	lab3.c	/^void teardown()$/;"	f
valid_brutus	bits.c	/^bool valid_brutus(unsigned short code)$/;"	f
validateCoin	bits.c	/^bool validateCoin(unsigned short code)$/;"	f
validateCoin	colorBit.c	/^bool validateCoin(unsigned short code)$/;"	f
x_position	structs.h	/^    double x_position;$/;"	m	struct:Buckeye
x_position	structs.h	/^    double x_position;$/;"	m	struct:Coin
x_velocity	structs.h	/^    double x_velocity;$/;"	m	struct:Buckeye
y_position	structs.h	/^    double y_position;$/;"	m	struct:Buckeye
y_position	structs.h	/^    double y_position;$/;"	m	struct:Coin
y_velocity	structs.h	/^    double y_velocity;$/;"	m	struct:Buckeye
